package View.InputTable;

import Controller.ModeClassification.POS;
import Controller.ModeClassification.SOP;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import Model.Row;
import java.util.ArrayList;
import View.OutputTable.ThreeVariablesOutput;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class ThreeVariablesFrm extends javax.swing.JFrame implements ActionListener {
    
    private DefaultTableModel tableModel;
    private String selectedOption = null;
    private ArrayList<Row> rows;
    private ArrayList<SOP> sops;
    private ArrayList<POS> pos;

    /**
     * Creates new form ThreeVariablesFrm
     */
    public ThreeVariablesFrm() {
        initComponents();
        setLocationRelativeTo(null);
        addActionListener();
        addButtonGroup();
        tableModel = (DefaultTableModel) table3Variables.getModel();
        rows = new ArrayList<Row>();
        sops = new ArrayList<SOP>();
        pos = new ArrayList<POS>();
        insertValueIntoTable();
    }
    
    public String getSelectedOption() {
        return selectedOption;
    }
    
    public void setSelectedOption(String selectedOption) {
        this.selectedOption = selectedOption;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn3Variables = new javax.swing.JButton();
        btn4Variables = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        radioBtnPOS = new javax.swing.JRadioButton();
        radioBtnSOP = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table3Variables = new javax.swing.JTable();
        btnSubmit = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Logic Expression Normalizer");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Input :");

        btn3Variables.setText("3 Variables");
        btn3Variables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3VariablesActionPerformed(evt);
            }
        });

        btn4Variables.setText("4 Variables");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Output Type :");

        radioBtnPOS.setText("POS");

        radioBtnSOP.setText("SOP");
        radioBtnSOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnSOPActionPerformed(evt);
            }
        });

        table3Variables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "A", "B", "C", "0", "1"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
            @Override
            public void setValueAt(Object aValue, int row, int column) {
                // Call the superclass method to ensure the value is set
                super.setValueAt(aValue, row, column);

                // If column 4 (0) was edited, update column 5 (1) to be the opposite
                if (column == 4) {
                    super.setValueAt(!(Boolean)aValue, row, 5);
                }
                // If column 5 (1) was edited, update column 4 (0) to be the opposite
                else if (column == 5) {
                    super.setValueAt(!(Boolean)aValue, row, 4);
                }
            }
        });
        table3Variables.setRowSelectionAllowed(false);
        table3Variables.setShowGrid(true);
        table3Variables.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table3Variables);

        btnSubmit.setText("Submit");

        jButton4.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(btn3Variables)
                                .addGap(18, 18, 18)
                                .addComponent(btn4Variables))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioBtnPOS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioBtnSOP))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSubmit)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btn3Variables)
                    .addComponent(btn4Variables))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(radioBtnPOS)
                    .addComponent(radioBtnSOP))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(jButton4))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn3VariablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3VariablesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn3VariablesActionPerformed

    private void radioBtnSOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnSOPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBtnSOPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThreeVariablesFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThreeVariablesFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThreeVariablesFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThreeVariablesFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThreeVariablesFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn3Variables;
    private javax.swing.JButton btn4Variables;
    private javax.swing.JButton btnSubmit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioBtnPOS;
    private javax.swing.JRadioButton radioBtnSOP;
    private javax.swing.JTable table3Variables;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        var obj = e.getSource();
        if (obj.equals(jButton4)) {
            dispose();
        } else if (obj.equals(btn4Variables)) {
            FourVariablesFrm fourVariablesFrm = new FourVariablesFrm();
            fourVariablesFrm.setVisible(true);
            this.dispose();
        } else if (obj.equals(btnSubmit)) {
            if (this.getSelectedOption() == null) {
                JOptionPane.showMessageDialog(rootPane, "Hãy chọn mode SOP hoặc POS để thấy kết quả !");
            } else {
                ThreeVariablesOutput threeVariablesOutput = new ThreeVariablesOutput(this);
                threeVariablesOutput.setVisible(true);
                this.dispose();
            }
        } else if (obj.equals(radioBtnSOP)) {
            String selected = "SOP";
            this.setSelectedOption(selected);
            sops.clear();
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                Boolean isSelected = (Boolean) tableModel.getValueAt(i, 5);
                if (isSelected != null && isSelected) {
                    sops.add(new SOP(i));
                }
            }
            var filename = "D:\\Netbeans\\OOP\\SOP.txt";
            writeDataToFile1(sops, filename);
        } else if (obj.equals(radioBtnPOS)) {
            String selected = "POS";
            this.setSelectedOption(selected);
            pos.clear();
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                Boolean isSelected = (Boolean) tableModel.getValueAt(i, 4);
                if (isSelected != null && isSelected) {
                    pos.add(new POS(i));
                }
            }
            var filename = "D:\\Netbeans\\OOP\\POS.txt";
            writeDataToFile2(pos, filename);
        }
    }
    
    private void addActionListener() {
        btn3Variables.addActionListener(this);
        btn4Variables.addActionListener(this);
        btnSubmit.addActionListener(this);
        radioBtnPOS.addActionListener(this);
        radioBtnSOP.addActionListener(this);
        jButton4.addActionListener(this);
    }
    
    private void addButtonGroup() {
        buttonGroup1.add(radioBtnPOS);
        buttonGroup1.add(radioBtnSOP);
    }
    
    private void insertValueIntoTable() {
        // Initialize the table with rows for all combinations of A, B, C.
        for (int i = 0; i < 8; i++) {
            // Calculate the values for A, B, C based on the row index i.
            int columnA = (i & 0b100) > 0 ? 1 : 0;
            int columnB = (i & 0b010) > 0 ? 1 : 0;
            int columnC = (i & 0b001) > 0 ? 1 : 0;

            // Create a new Row object with initial values for column0 and column1.
            Row row = new Row(i, columnA, columnB, columnC, true, false);

            // Add the Row object to the array list and the table model.
            rows.add(row);
            tableModel.addRow(new Object[]{row.getIndex(), row.getColumnA(), row.getColumnB(), row.getColumnC(), row.isColumn0(), row.isColumn1()});
        }

        // Set the cell renderers to center.
        setCellRenderers();
    }
    
    private void setCellRenderers() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(CENTER);
        for (int i = 0; i <= 3; i++) {
            table3Variables.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) table3Variables.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(CENTER);
    }
    
    private void writeDataToFile1(ArrayList<SOP> sops, String filename) {
        try (FileWriter fileWriter = new FileWriter(filename, false); BufferedWriter writer = new BufferedWriter(fileWriter)) {
            for (var sop : sops) {
                writer.write(sop.toStringThree());
            }
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void writeDataToFile2(ArrayList<POS> pos, String filename) {
        try (FileWriter fileWriter = new FileWriter(filename, false); BufferedWriter writer = new BufferedWriter(fileWriter)) {
            for (var poss : pos) {
                writer.write(poss.toStringThree());
            }
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
}
